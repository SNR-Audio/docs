
{
  "openapi": "3.1.0",
  "info": {
    "title": "Speech Synthesis API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://tts.snr.audio/",
      "description": "Production server"
    }
  ],
  "paths": {
    "/v1/rest/speech/turbo_stream": {
      "post": {
        "summary": "Streaming Audio Turbo",
        "operationId": "streaming_audio_turbo_v1_rest_speech_turbo_stream_post",
        "description": "Stream audio with turbo speed.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeechRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/rest/speech/stream": {
      "post": {
        "summary": "Streaming Audio",
        "operationId": "streaming_audio_v1_rest_speech_stream_post",
        "description": "Stream audio at regular speed.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeechRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "KeyBearer": []
          }
        ]
      }
    },
    "/v1/rest/speech/list_speakers": {
      "get": {
        "summary": "Get Speaker List",
        "operationId": "get_speaker_list_v1_rest_speech_list_speakers_get",
        "description": "Retrieve the list of available speakers.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "KeyBearer": []
          }
        ]
      }
    },
    "/v1/rest/speech": {
      "post": {
        "summary": "Speech Synthesis",
        "description": "Process the speech synthesis request.",
        "operationId": "speech_synthesis_v1_rest_speech_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeechRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "KeyBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "SpeechRequestBody": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "title": "Text Input",
            "default": "Hello world, welcome to OpenMic"
          },
          "voice": {
            "type": "string",
            "title": "Voice Type"
          },
          "similarity": {
            "type": "number",
            "title": "Similarity",
            "description": "The similarity sadjusts how faithfully the AI replicates the original voice, with higher settings potentially reproducing artifacts or background noise from poor-quality recordings, Should be between 0 and 1.",
            "minimum": 0,
            "maximum": 1,
            "default": 0.0
          },
          "expressiveness": {
            "type": "number",
            "title": "Expressiveness",
            "description": "Higher expressiveness in the model enables it to discern contextual cues from the text, allowing it to appropriately convey emotions such as humor, anger, sadness, or neutrality in the generated output, Should be between 0 and 1.",
            "minimum": 0,
            "maximum": 1,
            "default": 0.0
          },
          "pitch": {
            "type": "number",
            "title": "Pitch",
            "description": "Pitch level of the synthesized speech. Should be between 0.5 and 1.5",
            "minimum": 0.5,
            "maximum": 1.5,
            "default": 1
          },
          "speed": {
            "type": "number",
            "title": "Speed",
            "description": "Speed level of the synthesized speech. Should be between 0.5 and 2.0",
            "minimum": 0.5,
            "maximum": 2,
            "default": 1.0
          }
        },
        "title": "SpeechRequestBody"
      }
    },
    "securitySchemes": {
      "KeyBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
